name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux - multiple architectures via QEMU emulation for some tests
          - os: ubuntu-latest
            python-version: "3.13"
            arch: x64

          # macOS - Intel
          - os: macos-13  # Intel-based macOS
            python-version: "3.13"
            arch: x64

          # macOS - Apple Silicon
          - os: macos-latest  # ARM64-based macOS
            python-version: "3.13"
            arch: arm64

          # Windows - Intel only (ARM not available on GitHub Actions)
          - os: windows-latest
            python-version: "3.13"
            arch: x64

    steps:
      - uses: actions/checkout@v4

      # Ultra-fast dependency install & caching
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: true
          enable-cache: true

      - name: Install project (incl. dev extras)
        run: uv sync

      - name: Lint & format (Ruff)
        # Only run on one platform to save time
        if: matrix.os == 'ubuntu-latest'
        run: |
          uv run ruff format --check .
          uv run ruff check --output-format=github .

      - name: Type-check (mypy)
        # Only run on one platform to save time
        if: matrix.os == 'ubuntu-latest'
        run: uv run mypy .

      - name: Run tests
        env:
          PYTHONPATH: .
        run: uv run pytest --cov=meraki_dashboard_exporter --cov-report=xml

      - name: Upload coverage
        if: success() && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: rknightion/meraki-dashboard-exporter
          files: coverage.xml

  docker-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (multi-arch test)
        uses: docker/build-push-action@v6
        with:
          context: .
          # Test building for multiple architectures to catch issues early
          platforms: linux/386,linux/amd64,linux/arm/v5,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: false
          load: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PY_VERSION=3.13

      - name: Build and test Docker image (amd64 only for execution)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: false
          load: true
          tags: meraki-dashboard-exporter:test
          cache-from: type=gha
          build-args: |
            PY_VERSION=3.13

      - name: Test Docker image startup
        run: |
          # Test that the image can start and show help
          docker run --rm meraki-dashboard-exporter:test --help || true

          # Test image metadata
          docker inspect meraki-dashboard-exporter:test | jq '.[0].Config.Labels'

          # Verify non-root user
          docker run --rm meraki-dashboard-exporter:test whoami | grep -q exporter
