# Development docker-compose file
# Use this for local development with: docker-compose -f docker-compose.dev.yml up --build

services:
  exporter:
    build:
      context: .
      args:
        PY_VERSION: 3.13
    container_name: meraki-dashboard-exporter-dev
    restart: unless-stopped
    ports:
      - "9090:9090"
    environment:
      # Required: Meraki API key
      - MERAKI_API_KEY=${MERAKI_API_KEY}

      # Optional: Specific organization ID
      - MERAKI_EXPORTER_ORG_ID=${MERAKI_EXPORTER_ORG_ID:-}

      # Optional: Scrape interval (default 300s)
      - MERAKI_EXPORTER_SCRAPE_INTERVAL=${MERAKI_EXPORTER_SCRAPE_INTERVAL:-300}

      # Optional: Log level (default INFO)
      - MERAKI_EXPORTER_LOG_LEVEL=${MERAKI_EXPORTER_LOG_LEVEL:-DEBUG}

      # Optional: Device types to collect (comma-separated)
      # - MERAKI_EXPORTER_DEVICE_TYPES=${MERAKI_EXPORTER_DEVICE_TYPES:-MS,MR,MV,MT}

      # Optional: OpenTelemetry settings
      - MERAKI_EXPORTER_OTEL_ENABLED=${MERAKI_EXPORTER_OTEL_ENABLED:-false}
      - MERAKI_EXPORTER_OTEL_ENDPOINT=${MERAKI_EXPORTER_OTEL_ENDPOINT:-}
      - MERAKI_EXPORTER_OTEL_SERVICE_NAME=${MERAKI_EXPORTER_OTEL_SERVICE_NAME:-meraki-dashboard-exporter}

    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:9090/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Mount source code for development (if needed)
    # volumes:
    #   - ./src:/app

    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    user: "1000:1000"

  # Optional: Prometheus for testing
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-dev
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - exporter

volumes:
  prometheus_data:
